CC := icpx

LD := $(CC)

#DPCT2001:4: You can link with more libraries by adding them here.
LIB := 

FLAGS := 

ifeq ($(shell which $(CC)),)
    $(error ERROR - $(CC) compiler not found)
endif

ROOT_DIR     := $(shell dirname $(shell which $(CC)))
INCLUDE_SYCL := $(ROOT_DIR)/../include
INCLUDE_CL   := $(ROOT_DIR)/../include/sycl

TARGET_0_SRC_0 = ./kernels/attn/demo/mla_decode/template_mla_decode.dp.cpp
TARGET_0_OBJ_0 = ./kernels/attn/demo/mla_decode/template_mla_decode.dp.o
TARGET_0_FLAG_0 = -DNDEBUG -O3 -std=c++20 -DKITTENS_HOPPER ${FLAGS} -I./include -I./prototype ${FLAGS}

TARGET_0_SRC_1 = ./kernels/attn/demo/gqa_decode/template_gqa_decode_new.dp.cpp
TARGET_0_OBJ_1 = ./kernels/attn/demo/gqa_decode/template_gqa_decode_new.dp.o
TARGET_0_FLAG_1 = -DNDEBUG -O3 -std=c++20 -DKITTENS_HOPPER ${FLAGS} -I./include -I./prototype ${FLAGS}

TARGET_0_SRC_2 = ./kernels/attn/demo/gqa_decode/template_gqa_decode.dp.cpp
TARGET_0_OBJ_2 = ./kernels/attn/demo/gqa_decode/template_gqa_decode.dp.o
TARGET_0_FLAG_2 = -DNDEBUG -O3 -std=c++20 -DKITTENS_HOPPER ${FLAGS} -I./include -I./prototype ${FLAGS}

TARGET_0_SRC_3 = ./kernels/attn/demo/mha_decode/template_mha_decode.dp.cpp
TARGET_0_OBJ_3 = ./kernels/attn/demo/mha_decode/template_mha_decode.dp.o
TARGET_0_FLAG_3 = -DNDEBUG -O3 -std=c++20 -DKITTENS_HOPPER ${FLAGS} -I./include -I./prototype ${FLAGS}

TARGET_0_SRC_4 = ./kernels/attn/demo/4090.dp.cpp
TARGET_0_OBJ_4 = ./kernels/attn/demo/4090.dp.o
TARGET_0_FLAG_4 = -DNDEBUG -O3 -std=c++20 -DKITTENS_4090 ${FLAGS} -I./include -I./prototype ${FLAGS}

TARGET_0_SRC_5 = ./kernels/attn/demo/h100_lcf.dp.cpp
TARGET_0_OBJ_5 = ./kernels/attn/demo/h100_lcf.dp.o
TARGET_0_FLAG_5 = -DNDEBUG -O3 -std=c++20 -DKITTENS_HOPPER ${FLAGS} -I./include -I./prototype ${FLAGS}


.PHONY:all clean
OBJS_0 :=  ${TARGET_0_OBJ_5}
OBJS :=  ${OBJS_0}

all: $(OBJS)

$(TARGET_0_OBJ_0):$(TARGET_0_SRC_0)
	$(CC) -fsycl -c ${TARGET_0_SRC_0} -o ${TARGET_0_OBJ_0} $(TARGET_0_FLAG_0) 

$(TARGET_0_OBJ_1):$(TARGET_0_SRC_1)
	$(CC) -fsycl -c ${TARGET_0_SRC_1} -o ${TARGET_0_OBJ_1} $(TARGET_0_FLAG_1) 

$(TARGET_0_OBJ_2):$(TARGET_0_SRC_2)
	$(CC) -fsycl -c ${TARGET_0_SRC_2} -o ${TARGET_0_OBJ_2} $(TARGET_0_FLAG_2) 

$(TARGET_0_OBJ_3):$(TARGET_0_SRC_3)
	$(CC) -fsycl -c ${TARGET_0_SRC_3} -o ${TARGET_0_OBJ_3} $(TARGET_0_FLAG_3) 

$(TARGET_0_OBJ_4):$(TARGET_0_SRC_4)
	$(CC) -fsycl -c ${TARGET_0_SRC_4} -o ${TARGET_0_OBJ_4} $(TARGET_0_FLAG_4) 

$(TARGET_0_OBJ_5):$(TARGET_0_SRC_5)
	$(CC) -fsycl -c ${TARGET_0_SRC_5} -o ${TARGET_0_OBJ_5} $(TARGET_0_FLAG_5) 

clean:
	rm -f  ${OBJS_0}
